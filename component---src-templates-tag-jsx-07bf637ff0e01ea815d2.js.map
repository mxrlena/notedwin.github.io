{"version":3,"sources":["webpack:///./src/templates/tag.jsx","webpack:///./src/components/PostListing/PostListing.jsx"],"names":["TagTemplate","render","tag","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","id","className","title","config","siteTitle","React","Component","pageQuery","PostListing","getPostList","postList","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","map","post","to","key"],"mappings":"iQAOqBA,E,gLACnBC,OAAA,WAAU,IACAC,EAAQC,KAAKC,MAAMC,YAAnBH,IACFI,EAAYH,KAAKC,MAAMG,KAAKC,kBAAkBC,MACpD,OACE,kBAAC,IAAD,KACE,yBAAKC,GAAG,eAAeC,UAAU,iBAC/B,kBAAC,IAAD,CAAQC,MAAK,oBAAsBV,EAAtB,OAAgCW,IAAOC,YACpD,kBAAC,IAAD,CAAaR,UAAWA,O,GAROS,IAAMC,WAgBlCC,EAAS,c,iECpBhBC,E,wLACJC,YAAA,WACE,IAAMC,EAAW,GAYjB,OAXAjB,KAAKC,MAAME,UAAUe,SAAQ,SAAAC,GAC3BF,EAASG,KAAK,CACZC,KAAMF,EAASG,KAAKC,OAAOC,KAC3BC,KAAMN,EAASG,KAAKI,YAAYD,KAChCE,MAAOR,EAASG,KAAKI,YAAYC,MACjClB,MAAOU,EAASG,KAAKI,YAAYjB,MACjCmB,KAAMT,EAASG,KAAKC,OAAOK,KAC3BC,QAASV,EAASG,KAAKO,QACvBC,WAAYX,EAASG,KAAKQ,gBAGvBb,G,EAGTnB,OAAA,WACE,IAAMmB,EAAWjB,KAAKgB,cACtB,OACE,yBAAKR,UAAU,gBACb,yBAAKA,UAAU,SAEXS,EAASc,KAAI,SAAAC,GAAI,OACf,kBAAC,OAAD,CAAMC,GAAID,EAAKX,KAAMa,IAAKF,EAAKvB,MAAOD,UAAU,QAC9C,4BAAKwB,EAAKvB,OACV,2BAAIuB,EAAKH,gB,GA1BCjB,IAAMC,WAmCjBE","file":"component---src-templates-tag-jsx-07bf637ff0e01ea815d2.js","sourcesContent":["import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../layout\";\r\nimport PostListing from \"../components/PostListing/PostListing\";\r\nimport config from \"../../data/SiteConfig\";\r\n\r\nexport default class TagTemplate extends React.Component {\r\n  render() {\r\n    const { tag } = this.props.pageContext;\r\n    const postEdges = this.props.data.allMarkdownRemark.edges;\r\n    return (\r\n      <Layout>\r\n        <div id=\"main-content\" className=\"tag-container\">\r\n          <Helmet title={`Posts tagged as \"${tag}\" | ${config.siteTitle}`} />\r\n          <PostListing postEdges={postEdges} />\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query TagPage($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      sort: { fields: [fields___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            date\r\n          }\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n            cover\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nclass PostListing extends React.Component {\r\n  getPostList() {\r\n    const postList = [];\r\n    this.props.postEdges.forEach(postEdge => {\r\n      postList.push({\r\n        path: postEdge.node.fields.slug,\r\n        tags: postEdge.node.frontmatter.tags,\r\n        cover: postEdge.node.frontmatter.cover,\r\n        title: postEdge.node.frontmatter.title,\r\n        date: postEdge.node.fields.date,\r\n        excerpt: postEdge.node.excerpt,\r\n        timeToRead: postEdge.node.timeToRead\r\n      });\r\n    });\r\n    return postList;\r\n  }\r\n\r\n  render() {\r\n    const postList = this.getPostList();\r\n    return (\r\n      <div className=\"post-listing\">\r\n        <div className=\"posts\">\r\n          {/* Your post list here. */\r\n            postList.map(post => (\r\n              <Link to={post.path} key={post.title} className=\"post\">\r\n                <h3>{post.title}</h3>\r\n                <p>{post.excerpt}</p>\r\n              </Link>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostListing;\r\n"],"sourceRoot":""}